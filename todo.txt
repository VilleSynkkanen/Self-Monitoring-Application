FINAL (ke-to):
-automated testing (5 tests)
-configs 
-table indices
-finish documentation
-final checks
-return zip file (src + doc)

-Apis: routes that are used for building APIs
-Controllers: routes that are related to creating views
-Services: controllers and APIs rely on services (abstracting away functionality)

User2:
-name: fakiiri@outlook.com
-password: hello

Can leave out max 6 requirements for grade 5:
-deployment (1 + 1 from docs)
-tests(3)


Notes for docs:
-generic mood is required (cannot be "no mood")
-times are between 0 and 24 hours

Returning the project is done by returning a zip file that contains the project source code. 
The zip file should contain also instructions for running the project, necessary CREATE TABLE statements, 
required configurations, an internet address where the application can be tried out, and any other 
documentation laid out in the more detailed checklist below.

Documentation contains necessary CREATE TABLE statements needed to create the database used by the application
Documentation contains the address at which the application can currently be accessed
Documentation contains guidelines for running the application
Documentation contains guidelines for running tests

hostname: "hattie.db.elephantsql.com",
database: "eifojnbl",
user: "eifojnbl",
password: "sbo_HmjHuaB_FtzYK8UXkN0x7LhJk9MF",
port: 5432

Running (on linux command line, git bash works)
PGPORT=5432 PGDATABASE=eifojnbl PGHOST=hattie.db.elephantsql.com PGUSER=eifojnbl PGPASSWORD=sbo_HmjHuaB_FtzYK8UXkN0x7LhJk9MF deno run --allow-env --allow-net --allow-read --unstable app.js



